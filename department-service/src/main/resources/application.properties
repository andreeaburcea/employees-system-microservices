##by having a name, eureka server will use that app name as a service ID.
spring.application.name=department-service

# the URL of config server
# configure the location of GIT.
spring.config.import=optional:configserver:http://localhost:8888
#server.port=8080
#
##my sql database config
#
#spring.datasource.url=jdbc:mysql://localhost:3306/department_db
#spring.datasource.username=root
#spring.datasource.password=root13
##reading jpa data as it is:
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
##create automatically from java entities the tables, columns and rows:
#spring.jpa.hibernate.ddl-auto=update
#
##configure eureka server url
##now we can register to this eureka server.
#eureka.instance.client.serverUrl.defaultZone=http://localhost:8761/eureka/

# will enable all the endpoints of spring boot actuator.
# enable refresh
management.endpoints.web.exposure.include=*


#rabbitMQ default properties

spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

#Micrometer for distributing tracing

#default value is 0.1, it means only 10% of the REST Calls will be traced.
# 1.0 will trace each REST call and get a display.
management.tracing.sampling.probability=1.0

# with this logging pattern the REST call Trace ID and Span ID
# will be known and can be searched on ZipKin web page.
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]

#logs are known, which are helpful for testing and debugging
logging.level.org.springframework.web=DEBUG

